{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastPressedKey","handlerKeyPressed","eventKeyPress","setState","key","document","addEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,eAAgB,IAFpB,EAaEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEH,eAAgBE,EAAcE,OAdlD,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,qBAN5C,kCASE,WACEI,SAASC,iBAAiB,QAASC,KAAKN,qBAV5C,oBAiBE,WACE,IAAQD,EAAmBO,KAAKR,MAAxBC,eAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAc,mCACiBA,EADjB,KAEX,kCAzBd,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.205be8f6.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  lastPressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    lastPressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlerKeyPressed);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', this.handlerKeyPressed);\n  }\n\n  handlerKeyPressed = (eventKeyPress: KeyboardEvent) => {\n    this.setState({ lastPressedKey: eventKeyPress.key });\n  };\n\n  render() {\n    const { lastPressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {lastPressedKey\n            ? `The last pressed key is [${lastPressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}